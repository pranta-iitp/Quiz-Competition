
Can you explain the below flash message format?
<!-- Hidden div to store flash messages for JavaScript -->
<div id="flash-messages" style="display: none;">
{% with messages = get_flashed_messages(with_categories=true) %}
{% if messages %}
{% for category, message in messages %}
<div class="flash-item" data-category="{{ category }}" data-message="{{ message }}"></div>
{% endfor %}
{% endif %}
{% endwith %}
</div>

explanation:
This flash message format is a clever approach that combines Flask's Jinja2 templating with JavaScript DOM manipulation. 
Let me break down each part:

Flask Template Logic:

{% with messages = get_flashed_messages(with_categories=true) %}

- `get_flashed_messages(with_categories=true)` retrieves all flash messages from Flask's session
- `with_categories=true` returns both the message text AND its category (success, danger, warning, info)
- Creates a local variable `messages` containing this data

Conditional Check:

{% if messages %}

- Only processes the following code if there are actual flash messages
- Prevents empty HTML generation when no messages exist

Message Loop:

{% for category, message in messages %}

- Iterates through each flash message
- `category` contains the message type (success, danger, warning, info)
- `message` contains the actual message text

Data Storage Elements:

- Creates individual `div` elements for each message
- `class="flash-item"` provides a common selector for JavaScript
- `data-category="{{ category }}"` stores the message type in a data attribute
- `data-message="{{ message }}"` stores the message text in a data attribute

## How It Works

Server-Side (Flask):
1. Your Flask route calls `flash('Login successful!', 'success')`
2. Flask stores this in the session

Template Rendering:
1. Jinja2 retrieves stored messages
2. Generates hidden HTML elements with data attributes
3. Each message becomes a `` with stored data

Client-Side (JavaScript):
1. JavaScript finds all `.flash-item` elements
2. Reads `data-category` and `data-message` attributes
3. Creates visible Bootstrap alerts in the modal
4. Displays the modal to the user
